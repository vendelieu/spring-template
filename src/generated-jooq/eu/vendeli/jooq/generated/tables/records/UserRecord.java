/*
 * This file is generated by jOOQ.
 */
package eu.vendeli.jooq.generated.tables.records;


import eu.vendeli.jooq.generated.tables.User;
import eu.vendeli.jooq.generated.tables.interfaces.IUser;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.1",
        "schema version:1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements IUser {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>exm.user.id</code>.
     */
    @Override
    public UserRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>exm.user.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>exm.user.username</code>.
     */
    @Override
    public UserRecord setUsername(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>exm.user.username</code>.
     */
    @Override
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>exm.user.name</code>.
     */
    @Override
    public UserRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>exm.user.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>exm.user.email</code>.
     */
    @Override
    public UserRecord setEmail(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>exm.user.email</code>.
     */
    @Override
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>exm.user.created_at</code>.
     */
    @Override
    public UserRecord setCreatedAt(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>exm.user.created_at</code>.
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUser from) {
        setId(from.getId());
        setUsername(from.getUsername());
        setName(from.getName());
        setEmail(from.getEmail());
        setCreatedAt(from.getCreatedAt());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IUser> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Long id, String username, String name, String email, LocalDateTime createdAt) {
        super(User.USER);

        setId(id);
        setUsername(username);
        setName(name);
        setEmail(email);
        setCreatedAt(createdAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(eu.vendeli.jooq.generated.tables.pojos.User value) {
        super(User.USER);

        if (value != null) {
            setId(value.getId());
            setUsername(value.getUsername());
            setName(value.getName());
            setEmail(value.getEmail());
            setCreatedAt(value.getCreatedAt());
            resetChangedOnNotNull();
        }
    }
}
